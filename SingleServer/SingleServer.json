{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A3",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ],
      "metadata": {
        "description": "Size of the VM to create your Minecraft Server (Note: Impacts speed as well as cost.)"
      }
    },
    "mcEULA": {
      "type": "string",
      "defaultValue": "true",
      "allowedValues": [
        "false",
        "true"
      ],
      "metadata": {
        "description": "By changing the setting below to TRUE you are indicating your agreement to the Mojang EULA (https://account.mojang.com/documents/minecraft_eula)."
      }
    },
    "mcServerName": {
      "type": "string",
      "defaultValue": "Azure Minecraft Server",
      "metadata": {
        "description": "Provide the name for your Minecraft Server."
      }
    },
    "mcServerMOTD": {
      "type": "string",
      "defaultValue": "Welcome to Minecraft running in Azure!",
      "metadata": {
        "description": "Provide a Message of the Day for your Minecraft Server."
      }
    },
    "mcUserName": {
      "type": "string",
      "defaultValue": "YourNameHere",
      "metadata": {
        "description": "Provide your Minecraft name to be made an admin."
      }
    },
    "mcDifficulty": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3"
      ],
      "metadata": {
        "description": "0 - Peaceful, 1 - Easy, 2 - Normal, 3 - Hard"
      }
    },
    "mcLevelName": {
      "type": "string",
      "defaultValue": "world",
      "metadata": {
        "description": "Name of your world"
      }
    },
    "mcGameMode": {
      "type": "string",
      "defaultValue": "0",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3"
      ],
      "metadata": {
        "description": "0 - Survival, 1 - Creative, 2 - Adventure, 3 - Spectator"
      }
    },
    "mcWhiteList": {
      "type": "string",
      "defaultValue": "false",
      "allowedValues": [
        "false",
        "true"
      ],
      "metadata": {
        "description": "Only ops and whitelisted players can connect"
      }
    },
    "mcEnableCommandBlock": {
      "type": "string",
      "defaultValue": "false",
      "allowedValues": [
        "false",
        "true"
      ],
      "metadata": {
        "description": "enable command blocks"
      }
    },
    "mcSpawnMonsters": {
      "type": "string",
      "defaultValue": "true",
      "allowedValues": [
        "false",
        "true"
      ],
      "metadata": {
        "description": "Enables monster spawning"
      }
    },
    "mcGenerateStructures": {
      "type": "string",
      "defaultValue": "true",
      "allowedValues": [
        "false",
        "true"
      ],
      "metadata": {
        "description": "Generates villages etc."
      }
    },
    "mcLevelSeed": {
      "type": "string",
      "defaultValue": " ",
      "metadata": {
        "description": "Add a seed for your world"
      }
    },
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed. (Length: 3-24; Case: Lower; Valid: Alphanumeric; Unique: Global)"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2012-Datacenter or 2012-R2-Datacenter."
      }
    }
  },
  "variables": {
    "nameTemplate": "Minecraft-",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "OSDiskName": "[concat(variables('nameTemplate'),'Disk')]",
    "nicName": "[concat(variables('nameTemplate'),'NIC')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "[concat(variables('nameTemplate'),'Subnet')]",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat(variables('nameTemplate'),'PublicIP')]",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "Minecraft-VM",
    "virtualNetworkName": "[concat(variables('nameTemplate'),'VNET')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "nsgName": "[concat(variables('nameTemplate'),'NSG')]",
    "dscName": "[concat(variables('nameTemplate'),'DSC')]",
    "dscZIP": "https://github.com/zjalexander/AzureMinecraft/raw/master/SingleServer/DSC_SingleServer.ps1.zip",
    "dscConfig": "DSC_SingleServer.ps1\\SingleServer"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "rdp_rule",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "minecraft_rule",
            "properties": {
              "description": "Allow Minecraft",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "25565",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "Microsoft.Powershell.DSC",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-05-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
          ],
          "tags": {
            "displayName": "Microsoft.Powershell.DSC"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.6",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "modulesUrl": "[variables('dscZIP')]",
              "configurationFunction": "[variables('dscConfig')]",
              "Properties": {
                "mcEULA": "[parameters('mcEULA')]",
                "mcServerName": "[parameters('mcServerName')]",
                "mcServerMOTD": "[parameters('mcServerMOTD')]",
                "mcUserName": "[parameters('mcUserName')]",
                "mcDifficulty": "[parameters('mcDifficulty')]",
                "mcLevelName": "[parameters('mcLevelName')]",
                "mcGameMode": "[parameters('mcGameMode')]",
                "mcWhiteList": "[parameters('mcWhiteList')]",
                "mcEnableCommandBlock": "[parameters('mcEnableCommandBlock')]",
                "mcSpawnMonsters": "[parameters('mcSpawnMonsters')]",
                "mcGenerateStructures": "[parameters('mcGenerateStructures')]",
                "mcLevelSeed": "[parameters('mcLevelSeed')]"
              }
            },
            "protectedSettings": { }
          }
        }
      ]
    }
  ]
}